{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoyuzhu/Desktop/shopping-cart/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getProducts = async () => await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('product', getProducts);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wwVFS23mOgLlEHn+9N6L1vED9WU=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/xiaoyuzhu/Desktop/shopping-cart/src/App.tsx"],"names":["useQuery","getProducts","fetch","json","App","data","isLoading","error","console","log"],"mappings":";;;AACA,SAAQA,QAAR,QAAuB,aAAvB;;;AAoBA,MAAMC,WAAW,GAAG,YAAqC,MAAM,CAAC,MAAMC,KAAK,CAAC,mCAAD,CAAZ,EAAmDC,IAAnD,EAA/D;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,SAAP;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAAiB,SAAjB,EAA4BC,WAA5B,CAAzC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CAPD;;GAAMD,G;UAC6BJ,Q;;;KAD7BI,G;AAQN,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport {useQuery} from 'react-query'\n\nimport Drawer from '@material-ui/core/Drawer'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Grid from '@material-ui/core/Grid'\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\nimport Badge from '@material-ui/core/Badge'\n\nimport {Wrapper} from './App.styles'\n\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> => await (await fetch('https://fakestoreapi.com/products')).json()\n\nconst App = () => {\n  const {data, isLoading, error} = useQuery<CartItemType[]>('product', getProducts)\n  console.log(data)\n  return (\n    <div className=\"App\">\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}